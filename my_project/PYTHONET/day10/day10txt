前情回顾

1.多线程并发模型  基于threading模块
2.集成模块 socketserver
3.HTTPServer V2.0
4.协程:  1. 本质是一个单线程的程序,不能使用计算机多核资源
        2.但是协程也是一种多任务的编程方法
        3.在python中是通过将函数变为协程,通过记录执行位置,达到可以在多个函数之间执行的目的
        3.这要在IO处理中可以避免阻塞等待,提高效率
5.greenlet , gevent模块
    gevent.spawn() 生成协程对象
    gevent.joinall() 阻塞等待回收协程
    gevent.sleep() 协程阻塞

********************************************************************
from gevent  import monkey

monkey.patch_all()
功能: 运行monkey脚本,使程序中的阻塞行为可以被gevent捕获
*脚本的运行必须在模块导入之前

项目练习

电子词典
功能说明:
    1. 用户可以注册和登录
        *登录需要凭借用户名和密码
        *注册要求用户必须填写用户名密码,其他内容自定
        *用户名要求不能重复
    2.用户信息需要长期保存,满足随时登录需要
        *所有需要保存数据使用mysql
    3.能够满足多用户同时操作需要
    4.项目分为客户端和服务端,客户端负责发起请求和结果展示,其他处理功能服务器完成
    5.客户端请求即进入一级界面(print打印)功能有:
        登录   注册   退出   

        *注册后可以回到登录界面,也可以直接登录
    6.用户登录之后进入二级界面,功能:
        查单词    查看历史记录    注销

        查单词: 可以循环输入单词,返回单词解释
            提示: 1.每个单词占一行
                 2.单词是按照顺序排列的
                 3.单词和解释之间一定有空格
            *可以用单词本直接查询,也可以先存入数据库
        历史记录: 用户可以查看用户自己的查词记录
            格式: name   word   time   
            *可以显示所有记录,也可以给最近10个记录
        注销: 回到一级界面
1.确定技术点
    用什么并发?    多进程
    用什么套接字?   tcp
    用什么数据库?   mysql
    查词: 文件处理还是数据库查询?
2.建立数据库,设计数据库
    几个表, 干什么?
    表结构?
    表关系?
3.将数据(单词本)存入数据表
4.结构设计
    做什么样的封装?  函数
    流程: 服务端:  创建套接字-->创建父子进程-->子进程处理客户端请求,父进程等待下一个客户端连接-->编写子进程具体请求
         客户端:  创建套接字-->发起连接请求-->进入一级界面-->发起请求-->登录后进入二级界面-->发去请求

5.完成编写流程
    1.完成网络通信
    2.逐个功能实现
        注册: 
            客户端: 1.输入注册信息
                   2.将信息发送给服务器
                   3.等待服务器反馈
            服务端: 1.接收请求
                   2.判断是否可以注册
                   3.将结果反馈给客户端
                   4.将注册信息加入数据库

        登录:
            客户端: 1.输入登录信息
                   2.将信息发送给服务器
                   3.等待服务器反馈
                   进入二级界面
            服务端:
                   1.接收请求
                   2.验证用户信息是否正确
                   3.返回登录结果
        查词
            客户端: 1.发送请求
                   2.接收查询结果
                   3.##表示结束查词
            服务端: 1.接收请求
                   2.查询单词(文本, 数据库)
                   3.返回查询结果
                   4.插入历史记录
        历史记录
            客户端: 1.发送请求
                   2.接收反馈结果
            服务端: 1.接收请求
                   2.查询数据库
                   3.返回查询结果(所有, 10条?)

cookie:
improt getpass
passwd = getpass.getpass()
功能: 隐式的输入密码

    
作业: 1.整理进程线程网络内容
     2.复习mysql
    
周二: 1.将电子词典的剩下的功能写完,然后整理
     2.中期项目
     3.复习基础部分的函数,类,闭包,装饰器,模块调用
     