1. 图片与超链接
	1. 图片标签
		语法 ： <img>
		标签属性 ：
			1. src : 必填，设置路径
			2. width/height : 取像素值，设置图片尺寸
			3. title : 设置图片标题，鼠标悬停时显示
			4. alt : 设置图片加载失败时的提示文本
	2. 超链接标签
		作用 ：连接到指定文件（指定位置）
		语法 ：<a href="">超链接内容</a>
		属性 ：
			1. href : 必填，省略的话超链接跟普通文本没有区别，用来设置超链接的链接地址
				 href的取值 ：
				 1. href="" 表示链接到本页，相当于刷新
				 2. href="javascript:void(0)" 表示链接至本页,不刷新
				 3. href="#" 表示链接至本页，会在当前的url后面添加#，改变了url，不刷新
				 4. href="路径" 网络路径必须写协议
			2. target 属性
				设置目标文件的打开方式，默认在当前窗口打开
				取值 ：
					1. _self : 默认值，在当前窗口打开
					2. _blank : 新建窗口打开
		样式 :
			超链接文本都自带下划线，分为不同状态
			访问前 默认为蓝色文本色
			访问后 默认为紫色文本色
		锚点链接 ：
			作用 ：链接至指定文件的指定位置，#是锚点的标志
			语法 ：
				1. 页面中添加锚点
					 借助于空的<a></a>，通过name属性定义锚点名称
					 例 ：
							<a name="7"></a>
				2. 设置锚点链接地址
						<a href="#锚点名称">7.人物评价</a>
					 例 ：
						<a href="#7">7.人物评价</a> （跳转当前页的指定位置）
			练习 ：模拟回到顶部
2. 表格标签
	作用 ：通过结构化的行和列(单元格)实现辅助排版或数据展示
	语法 ：
		1. <table></table>表示表格
		2. 表格中添加<tr></tr>表示一行（table row）
		3. 行中添加<td></td>表示单元格，展示数据(table data)
	属性 ：
		1. table标签属性
			border : 取像素值，为表格添加边框（单元格也会被加上边框）
			bgcolor : 取颜色值，可使用英文单词,设置表格背景颜色
			cellspacing : 取像素值,设置边框与边框之间的距离
			cellpadding : 取像素值,设置内容框与边框之间的距离
			width/height : 取像素值,设置表格尺寸,默认表格大小由内容的多少决定
			align : 取值 left(默认)/center/right,设置表格在其父元素中的水平对齐方式
		2. tr的标签属性
			bgcolor : 设置当前行的背景颜色
			align : 设置当前行中内容的水平对齐方式,取值left(默认值)/center/right
			valign : 设置当前行中内容的垂直对齐方式,取值top/middle(默认值)/bottom
		3. td的标签属性
			bgcolor : 设置单元格背景颜色
			align : 内容的水平对齐方式
			valign : 内容的垂直对齐方式
			width/height : 设置单元格尺寸
	单元格合并(表格结构调整)***重点理解***
		1. 跨列合并 : 为单元格添加colspan属性,取无单位的数值,表示包含自身在内合并几个单元格
		2. 跨行合并 : 为单元格添加rowspan属性,取无单位的数值,表示包含自身在内向下合并几个单元格
		注意 : 不管是跨行还是跨列,都涉及代码中单元格数量的调整.
			跨列合并,影响当前行中的单元格,需要删除当前行中多余的单元格
			跨行合并,影响其后行中的单元格,需要依次到行中删除被合并的单元格
	表格行分组
		1. <thead></thead> 表头行分组
				可以嵌套若干行,表示表头
		2. <tfoot></tfoot> 表尾行分组
				可以嵌套若干行,表示表尾
		3. <tbody></tbody> 表格主体行分组
				默认书写的所有tr,td都会自动加入tbody中,作为表格主体内容
	th标签
		用法与td一致,表示单元格,常用于表头单元格,自带加粗和文本水平居中效果
3. 表单标签
	作用 : 表单用于收集用户信息提交给服务器
	组成 : 表单元素和表单控件
				 表单元素 <form></form> 负责提交数据
				 表单控件用于收集数据(输入框,单选钮,复选框等)
				 语法示例 :
						<form>
							表单控件
						</form>
	form 标签属性 :
		1. action : 设置数据的提交地址
		2. method : 设置数据的提交方式,默认为get,
								可取get/post
								1. get请求提交数据
										数据将以明文的方式,拼接在url后面进行提交;
										安全性较低;
										数据大小有一定限制,不超过2kb
								2. post请求提交数据
										数据会被打包发送,跟随请求头,请求体一并传输
										安全性较高;
										数据传输大小没有限制,可以传输二进制数据(图片,文件,音视频)
		3. enctype : 指定数据发往服务器时的编码类型
				取值 :
					1. application/x-www-form-urlencoded
						 默认值,对应get请求,将表单中的数据转换成字符串,以参数的形式拼接在url后面
					2. multipart/form-data
						 用于特殊数据类型的传输,对应post请求,用于传输图片,文件,音视频等二进制数据
	表单控件(重点)
		1. 提供一系列可视化的组件,用于收集数据
		2. 分类 :
			1. 文本框与密码框
				语法 :
					<input type="text"> 文本框
					<input type="password">密码框
				标签属性 :
					1. type : 必填,设置控件类型
					2. name : 必填,设置控件名称
										控件名称自定义,禁止直接使用name
					3. value : 控件的值
					4. placeholder : 用户输入之前的提示文本
					5. maxlength : 设置最大输入长度
			2. 单选钮和复选框
				语法 :
					<input type="radio"> 单选钮
					<input type="checkbox"> 复选框
				属性 :
					1. type : 必填项,指定控件类型
					2. name : 必填项,指定控件名称;同一组按钮的控件名称必须保持一致
					3. value : 必填项,表示控件的值
					4. checked : 设置按钮的默认选中状态
											checked = "checked"
											简写为 checked
				文本与控件的绑定 :
					label for id 用法
					1. 将文本使用label标签表示
					2. 为相应的控件添加id属性,属性值自定义,id属性具有唯一性
					3. 为label添加for属性,属性值为对应控件的id值

					

										
		
					

								



										


	
	



			
		












		
		
