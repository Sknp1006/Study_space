day16回顾:
    文件file
        长期存储数据
        以字节为单位进行顺序存储
    文件的操作步骤:
        1.打开
            open
        2.读/写
            读:
                F.read()
                F.readline()
                F.readlines()
            写:
                F.write(字符串或字节串)
                F.writelines(字符串或字节串列表)
        3.关闭:
            F.close()
    两种方式:
        文本文件操作
            打开模式: 't'
            自动进行编码(write)/解码(read)操作
            默认将'\r\n'转换为'\r'
        二进制文件操作
            打开模式: 'b'
    其他方法:
        F.tell()  读取当前指针的位置
        F.seek(偏移量, 相对位置)
        F.flush()  缓冲区,减少对外部输入输出(I/O)的次数
    汉字的编码:
        GB国标
            GB2312
            GBK
            GB18030(二字节或四字节)
        UNICODE国际标准
            UNICODE32(四字节)
            UNICODE16(二字节)
            UTF-8(1~3~6)
        编码字符串:
            gbk2312   一汉字3字节
            gbk
            gb18030
            utf-8
            ascii
    编码注释:
        # -*- coding:utf-8 -*-  

day17笔记:
    面向对象编程 Object-Oriented-Programing
    什么是对象:
        对象是指现实中的物体或实体(Object)
    面向对象:
        把一切看成对象(实例/实体/物体),用各种对象之间的关系来描述事物
    对象都有什么特征:
        对象有很多属性(名词,量词等)
            姓名,年龄,性别...
        对象有很多行为(动词,动作)
            学习,吃饭,睡觉,踢球,工作...
    什么是类:
        拥有相同属性和行为的对象分为一组,即为一个类
        类是用来描述对象的工具,用类可以创建此类的对象(实例)
    示意:
        车(类)  -----> BYD E6(京A.88888) 实例,对象
              \
               \-----> BMW X5(京B.99999) 实例,对象
        狗(类)  ------> 小京巴(户籍ID:0000001)  实例,对象
             \
              \ -----> 导盲犬(户籍ID:0000002)  实例,对象
        int(类) ------> 100(实例,对象)
              \
               \ ------> 200(实例,对象)
    
    类的创建语句 class 语句:
        语法:
            class 类(继承列表):
            '类文档字符串'
            实例方法定义
            类变量的定义
            类方法(@classmethod)定义
            静态方法(@staticmethod)定义
        作用:
            创建一个类
            类用于描述对象的行为和属性
            类用于创建此类的一个或多个对象(实例)
        说明:
            继承列表可以省略,省略继承列表表示继承自object类
            类名必须是标识符
            类名实质是变量,它绑定一个类(不要轻易赋值)
        示例见:
            myclass.py
    
    构造函数:
        构造函数用的表达式语法:
            类名([创建传参列表])
        作用:
            创建这个类的实例对象,并返回此示例对象的引用关系
        示例见:
            constructor.py
        
        类        |     对象（实例）
        class    |      object（instance）
    
    实例说明:
        实例有自己的作用域和名字空间,可以为该实例添加实例变量(也叫属性)
        实例可以调用类方法和实例方法
        实例可以访问类变量和实例变量
    实例方法(instance metnod):
        定义语法:
            class 类名(继承列表):
                def 实例方法名(self, 形参1, 形参2,...):
                    '''方法的文档字符串'''
                    语句块
        作用:
            用于描述一个对象的行为,让此类型的全部对象都拥有相同的行为
        说明:
            实例方法的实质是函数,是定义在类内的函数
            实例方法至少有一个形参,第一个形参绑定调用这个方法的实例
              一般命名为'self'
        调用语法:
            实例.实例方法名(调用传参)  #常用
            或 
            类名.实例方法名(实例, 调用传参)
        示例见:
           instance_method.py
    
    实例属性(instance attribute)也叫实例变量:
        每个实例可以有自己的变量来记住自己的数据,成为实例属性
        属性的使用方法:
            实例.属性名
        属性的赋值规则:
            首次为属性赋值则创建这些属性
            再次为属性赋值则修改属性的绑定关系
        作用:
            记录每个对象自身的数据
        实例见:
            attribute.py

