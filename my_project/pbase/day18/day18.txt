day17回顾
面向对象编程
  什么是对象
    对象是指物体或实体
  面向对象把一切东西看成是物体或实体

对象的特征:
  属性
    实例属性(实例变量)来记录对象自身的数据
  行为
    实例方法来描述对象的行为
  
类---->  对象(实例方法 , 实例属性)

类 是用来描述对象,创建对象的 "工厂"

class 语句
  语法:
    class 类名(继承列表):
        实例方法
        初始化方法
        析构方法
        类变量
        类方法
        静态方法

构造函数:
  类名(调用传参)  #  创建实例instance(对象object)

实例方法:
    class myclass:
        def 方法名1(self, 形参列表...):
            语句块

        def __init__(self, 形参列表....):
            '''实始化方法'''
            self.name = "no name"
        def __del__(self):
            '''析构方法'''
        

实例属性:
  class Dog:
      pass
  dog1 = Dog()
  dog1.color = '白色'

  del dog1.color

预置实例属性:
  __dict__ 属性
    绑定存储此对象的实例属性的字典
  __class__ 属性
    绑定创建此对象的类

isinstance(obj, 类或元组)  # 判断是否是某种类型
type(obj)  返回类型




day18笔记

类属性(也叫类变量)
  类属性是类的变量,此属性属于类,不属于此类的实例

作用:
  通常用来记录该类创建的对象的共有属性
说明:
  类属性可以通过该类直接访问
  类属性可以通过类的实例直接访问
  类属性可以通过此类的对象的__class__属性间接访问

示例见:
  class_attribute.py
  class_attribute2.py
  class_attribute3.py
  class_attribute4.py
  
类的文档字符串
  类内第一个没有赋值给任何变量的字符串为类的文档字符串
  类的文档字符串可以通过help函数查看
  类的文档字符串可以用 类的 __doc__ 属性访问

  示例:
    class Dog:
        '''这是类的文档字符串
        此字符串用来描述Dog对象的行为'''
        def eat(self, food):
             '此方法用于描述小狗吃东西的行为'

    >>> help(Dog)
    >>> print(Dog.__doc__)



类的 __slots__列表
  作用:
    1. 限定一个类创建的实例只能有固定的实例属性,不允许添加此
       列表以外的实例属性
    2. 防止因错误实例属性的名称而发生程序逻辑错误
  说明:
    1. __slots__属性是一个列表,列表的值是字符串
    2. 含有 __slots__属性的类所创建的实例对象没有__dict__
       属性,即此实例不用字典来存储对象的实例属性
  示例:
    class_slots.py 

类方法 @classmethod
  类方法是用于描述类的行为的方法,类方法属于类,不属于类的实例

  说明:
    类方法需要使用@classmethod 装饰器定义
    类方法至少有一个形参,第一个形参用于绑定类,约定写为'cls'
    类和该类的实例都可以调用类方法
    类方法不能访问此类创建的对象的实例属性
  示例:
    class_method.py




静态方法 @staticmethod
  静态方法是定义在类内部的函数,此函数的作用域是类的内部

  说明:
    静态方法需要使用@staticmethod 装饰器定义
    静态方法与普通函数定义相同,不需要传入self和cls参数
    静态方法只能凭借该类或类创建的实例调用
    静态方法不能访问类属性和实例属性
  示例见:
    static_method.py

练习:
  用类来描述一个学生的信息(可以修改之前写的Student类)
  如:
    class Student:
        ... # 此处自己实现
    
    将这些学生对象存于列表中, 写函数或方法实现添加学生和
    删除学生信息等操作
      1. 打印学生的个数
      2. 打印学生的平均成绩




